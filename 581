class Solution {
public:
    int findUnsortedSubarray(vector<int>& nums) {
        //判断元素是否小于一个
        if (nums.size() == 1) return 0;

        int low = 0, high = nums.size() - 1,len=nums.size();
        int maxNum = nums[0], minNum = nums[high];
        //循环开始到1到len-1为止
        for (int i = 1; i < len ; ++i) {
            //如果当前值，小于记录最大值，则记录位置，是要交换的最右边的值
            maxNum = max(nums[i], maxNum);
            if (nums[i] < maxNum) {		
                low = i;		
            }
            //如果当前值，大于记录最小值，记录位置，为要交换的最左边的值
            minNum = min(nums[len-1-i], minNum);
            if (nums[len - 1 - i] > minNum) {
                high = len - 1 - i;
            }
        }
        return low > high ? low - high + 1 : 0;      
    }
};
