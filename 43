/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    void printBTS(TreeNode* root,int target,vector<int> &v1,vector<vector<int>> &v2){
        if(root==NULL){
            return;
        }
        v1.push_back(root->val);
        int count = target - root->val;
        if(root->left==NULL && root->right==NULL){
            if(count == 0){
                v2.push_back(v1);
            }
        }
        printBTS(root->left,count,v1,v2);
        printBTS(root->right,count,v1,v2);
        v1.pop_back();
    }
    vector<vector<int>> pathSum(TreeNode* root, int target) {
        vector<int>v1;
        vector<vector<int>>v2;
        printBTS(root,target,v1,v2);
        return v2;
    }
};
